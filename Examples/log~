andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 1 ./ex1
Before MPI_INIT
Parallel section
After MPI_FINALIZE
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex2 ex2.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 1 ./ex2
process 0, size 1
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex2
process 0, size 2
process 1, size 2
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 3 ./ex2
process 2, size 3
process 1, size 3
process 0, size 3
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex2
process 2, size 4
process 3, size 4
process 0, size 4
process 1, size 4
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 10 ./ex2
process 2, size 10
process 6, size 10
process 7, size 10
process 1, size 10
process 3, size 10
process 4, size 10
process 5, size 10
process 9, size 10
process 8, size 10
process 0, size 10
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex3 ex3.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex3.c
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file ./ex3.c (Permission denied)
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file ./ex3.c (Permission denied)

===================================================================================
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   EXIT CODE: 255
=   CLEANING UP REMAINING PROCESSES
=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES
===================================================================================
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex3
process 0, 1^2=1
process 0, 2^2=4
process 0, 3^2=9
process 0, 4^2=16
process 0, 5^2=25
process 0, 6^2=36
process 0, 7^2=49
process 0, 8^2=64
process 0, 9^2=81
process 0, 10^2=100
process 0, 11^2=121
process 0, 12^2=144
process 0, 13^2=169
process 0, 14^2=196
process 0, 15^2=225
process 0, 16^2=256
process 0, 17^2=289
process 0, 18^2=324
process 0, 19^2=361
process 0, 20^2=400
process 0, 21^2=441
process 0, 22^2=484
process 0, 23^2=529
process 0, 24^2=576
process 0, 25^2=625
process 0, 26^2=676
process 0, 27^2=729
process 0, 28^2=784
process 0, 29^2=841
process 0, 30^2=900
process 0, 31^2=961
process 0, 32^2=1024
process 0, 33^2=1089
process 0, 34^2=1156
process 0, 35^2=1225
process 0, 36^2=1296
process 0, 37^2=1369
process 0, 38^2=1444
process 0, 39^2=1521
process 0, 40^2=1600
process 0, 41^2=1681
process 0, 42^2=1764
process 0, 43^2=1849
process 0, 44^2=1936
process 0, 45^2=2025
process 0, 46^2=2116
process 0, 47^2=2209
process 0, 48^2=2304
process 0, 49^2=2401
process 0, 50^2=2500
process 1, 51^2=2601
process 1, 52^2=2704
process 1, 53^2=2809
process 1, 54^2=2916
process 1, 55^2=3025
process 1, 56^2=3136
process 1, 57^2=3249
process 1, 58^2=3364
process 1, 59^2=3481
process 1, 60^2=3600
process 1, 61^2=3721
process 1, 62^2=3844
process 1, 63^2=3969
process 1, 64^2=4096
process 1, 65^2=4225
process 1, 66^2=4356
process 1, 67^2=4489
process 1, 68^2=4624
process 1, 69^2=4761
process 1, 70^2=4900
process 1, 71^2=5041
process 1, 72^2=5184
process 1, 73^2=5329
process 1, 74^2=5476
process 1, 75^2=5625
process 1, 76^2=5776
process 1, 77^2=5929
process 1, 78^2=6084
process 1, 79^2=6241
process 1, 80^2=6400
process 1, 81^2=6561
process 1, 82^2=6724
process 1, 83^2=6889
process 1, 84^2=7056
process 1, 85^2=7225
process 1, 86^2=7396
process 1, 87^2=7569
process 1, 88^2=7744
process 1, 89^2=7921
process 1, 90^2=8100
process 1, 91^2=8281
process 1, 92^2=8464
process 1, 93^2=8649
process 1, 94^2=8836
process 1, 95^2=9025
process 1, 96^2=9216
process 1, 97^2=9409
process 1, 98^2=9604
process 1, 99^2=9801
process 1, 100^2=10000
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex3
process 1, 26^2=676
process 1, 27^2=729
process 1, 28^2=784
process 1, 29^2=841
process 1, 30^2=900
process 1, 31^2=961
process 1, 32^2=1024
process 1, 33^2=1089
process 1, 34^2=1156
process 1, 35^2=1225
process 1, 36^2=1296
process 1, 37^2=1369
process 1, 38^2=1444
process 1, 39^2=1521
process 1, 40^2=1600
process 1, 41^2=1681
process 1, 42^2=1764
process 2, 51^2=2601
process 1, 43^2=1849
process 1, 44^2=1936
process 1, 45^2=2025
process 1, 46^2=2116
process 1, 47^2=2209
process 1, 48^2=2304
process 1, 49^2=2401
process 1, 50^2=2500
process 2, 52^2=2704
process 2, 53^2=2809
process 2, 54^2=2916
process 2, 55^2=3025
process 2, 56^2=3136
process 2, 57^2=3249
process 2, 58^2=3364
process 2, 59^2=3481
process 2, 60^2=3600
process 2, 61^2=3721
process 2, 62^2=3844
process 2, 63^2=3969
process 2, 64^2=4096
process 2, 65^2=4225
process 2, 66^2=4356
process 2, 67^2=4489
process 2, 68^2=4624
process 2, 69^2=4761
process 2, 70^2=4900
process 2, 71^2=5041
process 2, 72^2=5184
process 2, 73^2=5329
process 2, 74^2=5476
process 2, 75^2=5625
process 3, 76^2=5776
process 3, 77^2=5929
process 3, 78^2=6084
process 3, 79^2=6241
process 3, 80^2=6400
process 3, 81^2=6561
process 3, 82^2=6724
process 3, 83^2=6889
process 3, 84^2=7056
process 3, 85^2=7225
process 3, 86^2=7396
process 3, 87^2=7569
process 3, 88^2=7744
process 3, 89^2=7921
process 3, 90^2=8100
process 3, 91^2=8281
process 3, 92^2=8464
process 3, 93^2=8649
process 3, 94^2=8836
process 3, 95^2=9025
process 3, 96^2=9216
process 3, 97^2=9409
process 3, 98^2=9604
process 3, 99^2=9801
process 3, 100^2=10000
process 0, 1^2=1
process 0, 2^2=4
process 0, 3^2=9
process 0, 4^2=16
process 0, 5^2=25
process 0, 6^2=36
process 0, 7^2=49
process 0, 8^2=64
process 0, 9^2=81
process 0, 10^2=100
process 0, 11^2=121
process 0, 12^2=144
process 0, 13^2=169
process 0, 14^2=196
process 0, 15^2=225
process 0, 16^2=256
process 0, 17^2=289
process 0, 18^2=324
process 0, 19^2=361
process 0, 20^2=400
process 0, 21^2=441
process 0, 22^2=484
process 0, 23^2=529
process 0, 24^2=576
process 0, 25^2=625
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex4 ex4.c
ex4.c: In function ‘main’:
ex4.c:10:18: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
    name = (char*)malloc(MPI_MAX_PROCESSOR_NAME*sizeof(char));
                  ^
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex4
processor andrew-VirtualBox, process 0: tick= 0.000000, time= 0.000000
processor andrew-VirtualBox, process 1: tick= 0.000000, time= 0.000000
processor andrew-VirtualBox, process 2: tick= 0.000000, time= 0.000000
processor andrew-VirtualBox, process 3: tick= 0.000000, time= 0.000000
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex5 ex5.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex5
process 0 a = 2.000000, b = 1.000000
process 1 a = 2.000000, b = 1.000000
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex6 ex6.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex6
process 0 a = 0, b = -1
process 1 a = 1, b = 0
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex6
process 2 a = 2, b = -1
process 0 a = 0, b = -1
process 1 a = 1, b = 0
process 3 a = 3, b = 2
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex7 ex7.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex7
process 2 rbuf = 1
process 0 rbuf = -1
process 3 rbuf = 2
process 1 rbuf = 0
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex7 ex7.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./ex7
process 0 rbuf = -1
process 1 rbuf = 0
process 3 rbuf = 20
process 2 rbuf = 10
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex8 ex8.c
ex8.c: In function ‘main’:
ex8.c:12:25: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
       MPI_Buffer_attach(malloc(BUFSIZE), BUFSIZE);
                         ^
ex8.c:15:7: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
       free(buf);
       ^
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex8
Process 1 received 0 from process 0
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ ^C
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ 



andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex12 ex12.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 10 ./ex12
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex12 ex12.c
ex12.c: In function ‘main’:
ex12.c:41:13: warning: passing argument 3 of ‘MPI_Waitall’ from incompatible pointer type [enabled by default]
             MPI_Waitall(size-1, req, &num, indices, statuses);
             ^
In file included from ex12.c:2:0:
/usr/include/mpich/mpi.h:871:5: note: expected ‘struct MPI_Status *’ but argument is of type ‘int *’
 int MPI_Waitall(int count, MPI_Request array_of_requests[], MPI_Status array_of_statuses[]);
     ^
ex12.c:41:13: error: too many arguments to function ‘MPI_Waitall’
             MPI_Waitall(size-1, req, &num, indices, statuses);
             ^
In file included from ex12.c:2:0:
/usr/include/mpich/mpi.h:871:5: note: declared here
 int MPI_Waitall(int count, MPI_Request array_of_requests[], MPI_Status array_of_statuses[]);
     ^
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex12 ex12.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 10 ./ex12
^C[mpiexec@andrew-VirtualBox] Sending Ctrl-C to processes as requested
[mpiexec@andrew-VirtualBox] Press Ctrl-C again to force abort
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex12 ex12.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 10 ./ex12
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o ex13 ex13.c
ex13.c: In function ‘main’:
ex13.c:14:27: warning: incompatible implicit declaration of built-in function ‘calloc’ [enabled by default]
    double *a = (double *) calloc(size*nl*nl, sizeof(double));
                           ^
ex13.c:43:4: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
    free(a);
    ^
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 10 ./ex13
process 7 : a[7][0] = 700.000000 b[7][0] = 7.000000
process 6 : a[6][0] = 600.000000 b[6][0] = 6.000000
process 6 : a[6][1] = 601.000000 b[6][1] = 106.000000
process 2 : a[2][0] = 200.000000 b[2][0] = 2.000000
process 6 : a[6][2] = 602.000000 b[6][2] = 206.000000
process 6 : a[6][3] = 603.000000 b[6][3] = 306.000000
process 6 : a[6][4] = 604.000000 b[6][4] = 406.000000
process 6 : a[6][5] = 605.000000 b[6][5] = 506.000000
process 6 : a[6][6] = 606.000000 b[6][6] = 606.000000
process 2 : a[2][1] = 201.000000 b[2][1] = 102.000000
process 6 : a[6][7] = 607.000000 b[6][7] = 706.000000
process 2 : a[2][2] = 202.000000 b[2][2] = 202.000000
process 6 : a[6][8] = 608.000000 b[6][8] = 806.000000
process 2 : a[2][3] = 203.000000 b[2][3] = 302.000000
process 2 : a[2][4] = 204.000000 b[2][4] = 402.000000
process 2 : a[2][5] = 205.000000 b[2][5] = 502.000000
process 2 : a[2][6] = 206.000000 b[2][6] = 602.000000
process 2 : a[2][7] = 207.000000 b[2][7] = 702.000000
process 2 : a[2][8] = 208.000000 b[2][8] = 802.000000
process 5 : a[5][0] = 500.000000 b[5][0] = 5.000000
process 5 : a[5][1] = 501.000000 b[5][1] = 105.000000
process 5 : a[5][2] = 502.000000 b[5][2] = 205.000000
process 5 : a[5][3] = 503.000000 b[5][3] = 305.000000
process 5 : a[5][4] = 504.000000 b[5][4] = 405.000000
process 5 : a[5][5] = 505.000000 b[5][5] = 505.000000
process 5 : a[5][6] = 506.000000 b[5][6] = 605.000000
process 5 : a[5][7] = 507.000000 b[5][7] = 705.000000
process 5 : a[5][8] = 508.000000 b[5][8] = 805.000000
process 4 : a[4][0] = 400.000000 b[4][0] = 4.000000
process 4 : a[4][1] = 401.000000 b[4][1] = 104.000000
process 4 : a[4][2] = 402.000000 b[4][2] = 204.000000
process 4 : a[4][3] = 403.000000 b[4][3] = 304.000000
process 4 : a[4][4] = 404.000000 b[4][4] = 404.000000
process 4 : a[4][5] = 405.000000 b[4][5] = 504.000000
process 4 : a[4][6] = 406.000000 b[4][6] = 604.000000
process 4 : a[4][7] = 407.000000 b[4][7] = 704.000000
process 4 : a[4][8] = 408.000000 b[4][8] = 804.000000
process 8 : a[8][0] = 800.000000 b[8][0] = 8.000000
process 8 : a[8][1] = 801.000000 b[8][1] = 108.000000
process 8 : a[8][2] = 802.000000 b[8][2] = 208.000000
process 8 : a[8][3] = 803.000000 b[8][3] = 308.000000
process 8 : a[8][4] = 804.000000 b[8][4] = 408.000000
process 8 : a[8][5] = 805.000000 b[8][5] = 508.000000
process 8 : a[8][6] = 806.000000 b[8][6] = 608.000000
process 8 : a[8][7] = 807.000000 b[8][7] = 708.000000
process 8 : a[8][8] = 808.000000 b[8][8] = 808.000000
process 7 : a[7][1] = 701.000000 b[7][1] = 107.000000
process 7 : a[7][2] = 702.000000 b[7][2] = 207.000000
process 7 : a[7][3] = 703.000000 b[7][3] = 307.000000
process 7 : a[7][4] = 704.000000 b[7][4] = 407.000000
process 7 : a[7][5] = 705.000000 b[7][5] = 507.000000
process 7 : a[7][6] = 706.000000 b[7][6] = 607.000000
process 7 : a[7][7] = 707.000000 b[7][7] = 707.000000
process 7 : a[7][8] = 708.000000 b[7][8] = 807.000000
process 1 : a[1][0] = 100.000000 b[1][0] = 1.000000
process 1 : a[1][1] = 101.000000 b[1][1] = 101.000000
process 1 : a[1][2] = 102.000000 b[1][2] = 201.000000
process 1 : a[1][3] = 103.000000 b[1][3] = 301.000000
process 1 : a[1][4] = 104.000000 b[1][4] = 401.000000
process 1 : a[1][5] = 105.000000 b[1][5] = 501.000000
process 1 : a[1][6] = 106.000000 b[1][6] = 601.000000
process 1 : a[1][7] = 107.000000 b[1][7] = 701.000000
process 1 : a[1][8] = 108.000000 b[1][8] = 801.000000
process 0 : a[0][0] = 0.000000 b[0][0] = 0.000000
process 0 : a[0][1] = 1.000000 b[0][1] = 100.000000
process 0 : a[0][2] = 2.000000 b[0][2] = 200.000000
process 0 : a[0][3] = 3.000000 b[0][3] = 300.000000
process 0 : a[0][4] = 4.000000 b[0][4] = 400.000000
process 0 : a[0][5] = 5.000000 b[0][5] = 500.000000
process 0 : a[0][6] = 6.000000 b[0][6] = 600.000000
process 0 : a[0][7] = 7.000000 b[0][7] = 700.000000
process 0 : a[0][8] = 8.000000 b[0][8] = 800.000000
process 3 : a[3][0] = 300.000000 b[3][0] = 3.000000
process 3 : a[3][1] = 301.000000 b[3][1] = 103.000000
process 3 : a[3][2] = 302.000000 b[3][2] = 203.000000
process 3 : a[3][3] = 303.000000 b[3][3] = 303.000000
process 3 : a[3][4] = 304.000000 b[3][4] = 403.000000
process 3 : a[3][5] = 305.000000 b[3][5] = 503.000000
process 3 : a[3][6] = 306.000000 b[3][6] = 603.000000
process 3 : a[3][7] = 307.000000 b[3][7] = 703.000000
process 3 : a[3][8] = 308.000000 b[3][8] = 803.000000
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 2 ./ex13
process 0 : a[0][0] = 0.000000 b[0][0] = 0.000000
process 0 : a[0][1] = 1.000000 b[0][1] = 100.000000
process 0 : a[0][2] = 2.000000 b[0][2] = 200.000000
process 0 : a[0][3] = 3.000000 b[0][3] = 300.000000
process 0 : a[0][4] = 4.000000 b[0][4] = 400.000000
process 0 : a[0][5] = 5.000000 b[0][5] = 500.000000
process 0 : a[0][6] = 6.000000 b[0][6] = 600.000000
process 0 : a[0][7] = 7.000000 b[0][7] = 700.000000
process 0 : a[0][8] = 8.000000 b[0][8] = 800.000000
process 0 : a[1][0] = 100.000000 b[1][0] = 1.000000
process 0 : a[1][1] = 101.000000 b[1][1] = 101.000000
process 0 : a[1][2] = 102.000000 b[1][2] = 201.000000
process 0 : a[1][3] = 103.000000 b[1][3] = 301.000000
process 0 : a[1][4] = 104.000000 b[1][4] = 401.000000
process 0 : a[1][5] = 105.000000 b[1][5] = 501.000000
process 0 : a[1][6] = 106.000000 b[1][6] = 601.000000
process 0 : a[1][7] = 107.000000 b[1][7] = 701.000000
process 0 : a[1][8] = 108.000000 b[1][8] = 801.000000
process 0 : a[2][0] = 200.000000 b[2][0] = 2.000000
process 0 : a[2][1] = 201.000000 b[2][1] = 102.000000
process 0 : a[2][2] = 202.000000 b[2][2] = 202.000000
process 0 : a[2][3] = 203.000000 b[2][3] = 302.000000
process 0 : a[2][4] = 204.000000 b[2][4] = 402.000000
process 0 : a[2][5] = 205.000000 b[2][5] = 502.000000
process 0 : a[2][6] = 206.000000 b[2][6] = 602.000000
process 0 : a[2][7] = 207.000000 b[2][7] = 702.000000
process 0 : a[2][8] = 208.000000 b[2][8] = 802.000000
process 0 : a[3][0] = 300.000000 b[3][0] = 3.000000
process 0 : a[3][1] = 301.000000 b[3][1] = 103.000000
process 0 : a[3][2] = 302.000000 b[3][2] = 203.000000
process 0 : a[3][3] = 303.000000 b[3][3] = 303.000000
process 0 : a[3][4] = 304.000000 b[3][4] = 403.000000
process 0 : a[3][5] = 305.000000 b[3][5] = 503.000000
process 0 : a[3][6] = 306.000000 b[3][6] = 603.000000
process 0 : a[3][7] = 307.000000 b[3][7] = 703.000000
process 0 : a[3][8] = 308.000000 b[3][8] = 803.000000
process 0 : a[4][0] = 400.000000 b[4][0] = 4.000000
process 0 : a[4][1] = 401.000000 b[4][1] = 104.000000
process 0 : a[4][2] = 402.000000 b[4][2] = 204.000000
process 0 : a[4][3] = 403.000000 b[4][3] = 304.000000
process 0 : a[4][4] = 404.000000 b[4][4] = 404.000000
process 0 : a[4][5] = 405.000000 b[4][5] = 504.000000
process 0 : a[4][6] = 406.000000 b[4][6] = 604.000000
process 0 : a[4][7] = 407.000000 b[4][7] = 704.000000
process 0 : a[4][8] = 408.000000 b[4][8] = 804.000000
process 1 : a[5][0] = 500.000000 b[5][0] = 5.000000
process 1 : a[5][1] = 501.000000 b[5][1] = 105.000000
process 1 : a[5][2] = 502.000000 b[5][2] = 205.000000
process 1 : a[5][3] = 503.000000 b[5][3] = 305.000000
process 1 : a[5][4] = 504.000000 b[5][4] = 405.000000
process 1 : a[5][5] = 505.000000 b[5][5] = 505.000000
process 1 : a[5][6] = 506.000000 b[5][6] = 605.000000
process 1 : a[5][7] = 507.000000 b[5][7] = 705.000000
process 1 : a[5][8] = 508.000000 b[5][8] = 805.000000
process 1 : a[6][0] = 600.000000 b[6][0] = 6.000000
process 1 : a[6][1] = 601.000000 b[6][1] = 106.000000
process 1 : a[6][2] = 602.000000 b[6][2] = 206.000000
process 1 : a[6][3] = 603.000000 b[6][3] = 306.000000
process 1 : a[6][4] = 604.000000 b[6][4] = 406.000000
process 1 : a[6][5] = 605.000000 b[6][5] = 506.000000
process 1 : a[6][6] = 606.000000 b[6][6] = 606.000000
process 1 : a[6][7] = 607.000000 b[6][7] = 706.000000
process 1 : a[6][8] = 608.000000 b[6][8] = 806.000000
process 1 : a[7][0] = 700.000000 b[7][0] = 7.000000
process 1 : a[7][1] = 701.000000 b[7][1] = 107.000000
process 1 : a[7][2] = 702.000000 b[7][2] = 207.000000
process 1 : a[7][3] = 703.000000 b[7][3] = 307.000000
process 1 : a[7][4] = 704.000000 b[7][4] = 407.000000
process 1 : a[7][5] = 705.000000 b[7][5] = 507.000000
process 1 : a[7][6] = 706.000000 b[7][6] = 607.000000
process 1 : a[7][7] = 707.000000 b[7][7] = 707.000000
process 1 : a[7][8] = 708.000000 b[7][8] = 807.000000
process 1 : a[8][0] = 800.000000 b[8][0] = 8.000000
process 1 : a[8][1] = 801.000000 b[8][1] = 108.000000
process 1 : a[8][2] = 802.000000 b[8][2] = 208.000000
process 1 : a[8][3] = 803.000000 b[8][3] = 308.000000
process 1 : a[8][4] = 804.000000 b[8][4] = 408.000000
process 1 : a[8][5] = 805.000000 b[8][5] = 508.000000
process 1 : a[8][6] = 806.000000 b[8][6] = 608.000000
process 1 : a[8][7] = 807.000000 b[8][7] = 708.000000
process 1 : a[8][8] = 808.000000 b[8][8] = 808.000000
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o example15a example15a.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 example15a
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file example15a (No such file or directory)
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file example15a (No such file or directory)
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file example15a (No such file or directory)
[proxy:0:0@andrew-VirtualBox] HYDU_create_process (./utils/launch/launch.c:75): execvp error on file example15a (No such file or directory)

===================================================================================
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   EXIT CODE: 255
=   CLEANING UP REMAINING PROCESSES
=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES
===================================================================================
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./example15a
process 3 prev=2 next=0
process 0 prev=3 next=1
process 1 prev=0 next=2
process 2 prev=1 next=3
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpicc -o example16a example16a.c
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ mpirun -np 4 ./example16a
rank = 0 model time = 0.026705
rank = 1 model time = 0.026706
rank = 3 model time = 0.026706
rank = 2 model time = 0.026706
rank = 0 barrier time = 0.035401
rank = 1 barrier time = 0.035401
rank = 2 barrier time = 0.035400
rank = 3 barrier time = 0.035403
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ ^C
andrew@andrew-VirtualBox:~/Документы/ParalellLanguages/Examples$ 

